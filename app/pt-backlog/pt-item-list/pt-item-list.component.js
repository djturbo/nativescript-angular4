"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
/* Import services */
var backlog_service_1 = require("../../services/backlog.service");
var static_data_1 = require("../../shared/static-data");
var PTItemListComponent = (function () {
    function PTItemListComponent(backlogService) {
        this.backlogService = backlogService;
    }
    PTItemListComponent.prototype.ngOnInit = function () {
        this.ptItems = ITEMS;
    };
    PTItemListComponent.prototype.getIndicatorClass = function (item) {
        return static_data_1.ItemTypeEnum.getIndicatorClass(item.type);
    };
    /* Events  */
    PTItemListComponent.prototype.onLoaded = function (event) {
        console.log('onLoaded event: ', event);
    };
    PTItemListComponent.prototype.onItemLoading = function (event) {
        console.log("onItemLoading ", event);
    };
    PTItemListComponent.prototype.onItemTap = function (event) {
        console.log('onItemTap ', event);
        var lv = event.object;
        console.log('onItemTap lv: ', lv);
        var item = lv.items[event.index];
        alert(item.title);
    };
    PTItemListComponent = __decorate([
        core_1.Component({
            selector: 'pt-item-list',
            templateUrl: './pt-backlog/pt-item-list/pt-item-list.component.html',
            styleUrls: ['./pt-backlog/pt-item-list/pt-item-list.component.scss']
        }),
        __metadata("design:paramtypes", [backlog_service_1.BacklogService])
    ], PTItemListComponent);
    return PTItemListComponent;
}());
exports.PTItemListComponent = PTItemListComponent;
var ITEMS = [
    { id: '1', title: 'item 1', description: 'item 1 desc', estimate: 5, priority: static_data_1.PriorityEnum.Low, status: static_data_1.StatusEnum.Open, tasks: [], type: static_data_1.ItemTypeEnum.Bug, dateCreated: new Date(), dateModified: new Date(), comments: [], assignee: null },
    { id: '2', title: 'item 2', description: 'item 2 desc', estimate: 10, priority: static_data_1.PriorityEnum.Medium, status: static_data_1.StatusEnum.ReOpened, tasks: [], type: static_data_1.ItemTypeEnum.PBI, dateCreated: new Date(), dateModified: new Date(), comments: [], assignee: null },
    { id: '3', title: 'item 3', description: 'item 3 desc', estimate: 12, priority: static_data_1.PriorityEnum.High, status: static_data_1.StatusEnum.Open, tasks: [], type: static_data_1.ItemTypeEnum.Chore, dateCreated: new Date(), dateModified: new Date(), comments: [], assignee: null },
    { id: '4', title: 'item 4', description: 'item 4 desc', estimate: 6, priority: static_data_1.PriorityEnum.Critical, status: static_data_1.StatusEnum.Open, tasks: [], type: static_data_1.ItemTypeEnum.Impediment, dateCreated: new Date(), dateModified: new Date(), comments: [], assignee: null },
    { id: '5', title: 'item 5', description: 'item 5 desc', estimate: 20, priority: static_data_1.PriorityEnum.Low, status: static_data_1.StatusEnum.Open, tasks: [], type: static_data_1.ItemTypeEnum.Bug, dateCreated: new Date(), dateModified: new Date(), comments: [], assignee: null }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHQtaXRlbS1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInB0LWl0ZW0tbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzQ0FBa0Q7QUFDbEQscUJBQXFCO0FBQ3JCLGtFQUFnRTtBQUVoRSx3REFBa0Y7QUFVbEY7SUFHSSw2QkFBb0IsY0FBOEI7UUFBOUIsbUJBQWMsR0FBZCxjQUFjLENBQWdCO0lBQUksQ0FBQztJQUV2RCxzQ0FBUSxHQUFSO1FBQ0ksSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQztJQUVNLCtDQUFpQixHQUF4QixVQUF5QixJQUFhO1FBQ2xDLE1BQU0sQ0FBQywwQkFBWSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRUQsYUFBYTtJQUNiLHNDQUFRLEdBQVIsVUFBUyxLQUFLO1FBQ1YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBQ0QsMkNBQWEsR0FBYixVQUFjLEtBQUs7UUFDZixPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFDRCx1Q0FBUyxHQUFULFVBQVUsS0FBSztRQUNYLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRWpDLElBQUksRUFBRSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDdEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVsQyxJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNqQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3RCLENBQUM7SUE1QlEsbUJBQW1CO1FB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bi8qIEltcG9ydCBzZXJ2aWNlcyAqL1xuaW1wb3J0IHsgQmFja2xvZ1NlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9iYWNrbG9nLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBJdGVtVHlwZUVudW0sIFN0YXR1c0VudW0sIFByaW9yaXR5RW51bSB9IGZyb20gJy4uLy4uL3NoYXJlZC9zdGF0aWMtZGF0YSc7XG5pbXBvcnQgeyBQVERvbWFpbiB9IGZyb20gJy4uLy4uL3R5cGluZ3MvZG9tYWluJztcbmltcG9ydCBJUFRJdGVtID0gUFREb21haW4uSVBUSXRlbTtcblxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3B0LWl0ZW0tbGlzdCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3B0LWJhY2tsb2cvcHQtaXRlbS1saXN0L3B0LWl0ZW0tbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcHQtYmFja2xvZy9wdC1pdGVtLWxpc3QvcHQtaXRlbS1saXN0LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgUFRJdGVtTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHVibGljIHB0SXRlbXM6IElQVEl0ZW1bXTtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgYmFja2xvZ1NlcnZpY2U6IEJhY2tsb2dTZXJ2aWNlKSB7IH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnB0SXRlbXMgPSBJVEVNUztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0SW5kaWNhdG9yQ2xhc3MoaXRlbTogSVBUSXRlbSkge1xuICAgICAgICByZXR1cm4gSXRlbVR5cGVFbnVtLmdldEluZGljYXRvckNsYXNzKGl0ZW0udHlwZSk7XG4gICAgfVxuXG4gICAgLyogRXZlbnRzICAqL1xuICAgIG9uTG9hZGVkKGV2ZW50KTogdm9pZCB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdvbkxvYWRlZCBldmVudDogJywgZXZlbnQpO1xuICAgIH1cbiAgICBvbkl0ZW1Mb2FkaW5nKGV2ZW50KTogdm9pZCB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwib25JdGVtTG9hZGluZyBcIiwgZXZlbnQpO1xuICAgIH1cbiAgICBvbkl0ZW1UYXAoZXZlbnQpOiB2b2lkIHtcbiAgICAgICAgY29uc29sZS5sb2coJ29uSXRlbVRhcCAnLCBldmVudCk7XG5cbiAgICAgICAgbGV0IGx2ID0gZXZlbnQub2JqZWN0O1xuICAgICAgICBjb25zb2xlLmxvZygnb25JdGVtVGFwIGx2OiAnLCBsdik7XG5cbiAgICAgICAgbGV0IGl0ZW0gPSBsdi5pdGVtc1tldmVudC5pbmRleF07XG4gICAgICAgIGFsZXJ0KGl0ZW0udGl0bGUpO1xuICAgIH1cbn1cbmNvbnN0IElURU1TOiBJUFRJdGVtW10gPSBbXG4gICAgeyBpZDogJzEnLCB0aXRsZTogJ2l0ZW0gMScsIGRlc2NyaXB0aW9uOiAnaXRlbSAxIGRlc2MnLCBlc3RpbWF0ZTogNSwgcHJpb3JpdHk6IFByaW9yaXR5RW51bS5Mb3csIHN0YXR1czogU3RhdHVzRW51bS5PcGVuLCB0YXNrczogW10sIHR5cGU6IEl0ZW1UeXBlRW51bS5CdWcsIGRhdGVDcmVhdGVkOiBuZXcgRGF0ZSgpLCBkYXRlTW9kaWZpZWQ6IG5ldyBEYXRlKCksIGNvbW1lbnRzOiBbXSwgYXNzaWduZWU6IG51bGwgfSxcbiAgICB7IGlkOiAnMicsIHRpdGxlOiAnaXRlbSAyJywgZGVzY3JpcHRpb246ICdpdGVtIDIgZGVzYycsIGVzdGltYXRlOiAxMCwgcHJpb3JpdHk6IFByaW9yaXR5RW51bS5NZWRpdW0sIHN0YXR1czogU3RhdHVzRW51bS5SZU9wZW5lZCwgdGFza3M6IFtdLCB0eXBlOiBJdGVtVHlwZUVudW0uUEJJLCBkYXRlQ3JlYXRlZDogbmV3IERhdGUoKSwgZGF0ZU1vZGlmaWVkOiBuZXcgRGF0ZSgpLCBjb21tZW50czogW10sIGFzc2lnbmVlOiBudWxsIH0sXG4gICAgeyBpZDogJzMnLCB0aXRsZTogJ2l0ZW0gMycsIGRlc2NyaXB0aW9uOiAnaXRlbSAzIGRlc2MnLCBlc3RpbWF0ZTogMTIsIHByaW9yaXR5OiBQcmlvcml0eUVudW0uSGlnaCwgc3RhdHVzOiBTdGF0dXNFbnVtLk9wZW4sIHRhc2tzOiBbXSwgdHlwZTogSXRlbVR5cGVFbnVtLkNob3JlLCBkYXRlQ3JlYXRlZDogbmV3IERhdGUoKSwgZGF0ZU1vZGlmaWVkOiBuZXcgRGF0ZSgpLCBjb21tZW50czogW10sIGFzc2lnbmVlOiBudWxsIH0sXG4gICAgeyBpZDogJzQnLCB0aXRsZTogJ2l0ZW0gNCcsIGRlc2NyaXB0aW9uOiAnaXRlbSA0IGRlc2MnLCBlc3RpbWF0ZTogNiwgcHJpb3JpdHk6IFByaW9yaXR5RW51bS5Dcml0aWNhbCwgc3RhdHVzOiBTdGF0dXNFbnVtLk9wZW4sIHRhc2tzOiBbXSwgdHlwZTogSXRlbVR5cGVFbnVtLkltcGVkaW1lbnQsIGRhdGVDcmVhdGVkOiBuZXcgRGF0ZSgpLCBkYXRlTW9kaWZpZWQ6IG5ldyBEYXRlKCksIGNvbW1lbnRzOiBbXSwgYXNzaWduZWU6IG51bGwgfSxcbiAgICB7IGlkOiAnNScsIHRpdGxlOiAnaXRlbSA1JywgZGVzY3JpcHRpb246ICdpdGVtIDUgZGVzYycsIGVzdGltYXRlOiAyMCwgcHJpb3JpdHk6IFByaW9yaXR5RW51bS5Mb3csIHN0YXR1czogU3RhdHVzRW51bS5PcGVuLCB0YXNrczogW10sIHR5cGU6IEl0ZW1UeXBlRW51bS5CdWcsIGRhdGVDcmVhdGVkOiBuZXcgRGF0ZSgpLCBkYXRlTW9kaWZpZWQ6IG5ldyBEYXRlKCksIGNvbW1lbnRzOiBbXSwgYXNzaWduZWU6IG51bGwgfVxuXTsiXX0=